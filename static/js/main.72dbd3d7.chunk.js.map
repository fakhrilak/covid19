{"version":3,"sources":["img/Thumbnail.jpg","Page/Home.js","components/Pagination/Pagination.js","components/Tabel/Tabel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","useState","data","setData","useEffect","fetch","then","response","json","className","src","Thumbnail","style","left","color","paddingLeft","cases","deaths","recovered","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","height","i","Math","ceil","push","A","length","B","setB","C","setC","D","setD","console","log","numberpage","slice","map","number","key","onClick","textAlign","Tabel","prop","detail","index","id","country","todayCases","todayDeaths","active","critical","App","posts","setPosts","search","setSearch","update","setupdate","currentPage","setCurrentPage","setPostPerpage","setHeight","indexOfLastPost","indexOfFirstPost","currentPosts","filter","el","setTimeout","position","top","onChange","e","target","value","right","placeholder","type","pageNumber","paddingRight","borderRadius","backgroundColor","borderColor","borderWidth","paddingTop","format","ticking","timezone","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.72dbd3d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Thumbnail.274509f1.jpg\";","import React,{useEffect,useState} from 'react'\r\nimport './Home.css'\r\nimport Thumbnail  from '../img/Thumbnail.jpg'\r\nconst Home = () => {\r\n    const [data,setData]=useState([])\r\n    useEffect(()=>{\r\n       fetch('https://coronavirus-19-api.herokuapp.com/all')\r\n       .then(response=>response.json())\r\n       .then(json=>setData(json))\r\n    })\r\n  return (\r\n    <div className=\"Home\">\r\n        <div className = \"Content-Home\">\r\n            <img src={Thumbnail}/>\r\n            <div className = \"Content\" style={{ left: '50%'}}>\r\n                <div style={{color:'#FF0742',paddingLeft:20}}><h3>{data.cases}</h3><p>Coronavirus Cases</p></div>\r\n                <div style={{color:'#FF0742'}}><h3>{data.deaths}</h3><p>Total Deaths</p></div>\r\n                <div style={{color:'#FF0742'}}><h3>{data.recovered}</h3><p>Recovered Cases</p></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react';\r\nimport './Pagination.css'\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate, height}) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  \r\n  let A = pageNumbers.length/5\r\n  \r\n  const [B,setB]=useState(0)\r\n  const [C,setC]=useState(5)\r\n  const [D,setD]=useState(0)\r\n  const handleNext=()=>{\r\n    if(D<A){\r\n      setD(D+1);\r\n      setB(B+5)\r\n      setC(C+5)\r\n    }else if(D>A){\r\n      setD(0);\r\n      setB(0)\r\n      setC(5)\r\n    }\r\n    \r\n  }\r\n  console.log(B)\r\n  console.log(D)\r\n  const handlePreview=()=>{\r\n    setD(D-1);\r\n    setB(B-5)\r\n    setC(C-5)\r\n  }\r\n  let Filter= pageNumbers.slice(B, C);\r\n\r\n  const numberpage = Filter.map((number)=>{\r\n    return(\r\n      <>\r\n         <ul >\r\n         <li key={number} className='page-item'>\r\n            <a onClick={() => paginate(number)}>\r\n              {number}\r\n            </a>\r\n          </li>\r\n         </ul>\r\n      </>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className=\"container\">\r\n        <ul className='pagination'>\r\n          <div className='item'>\r\n            <a  onClick={()=>handlePreview()}  style={{textAlign:'right'}}>{\"<<\"}</a>\r\n            <a style={{textAlign:'left'}}>{numberpage}</a>\r\n            <a  onClick={()=>handleNext()} style={{paddingLeft:20}}>{\">>\"}</a> \r\n          </div>       \r\n        </ul>         \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;","import React from 'react'\r\nimport './Tabel.css'\r\n\r\nconst Tabel = (prop) => {\r\n    const data = prop.detail.map((data, index) => {\r\n\t\treturn (\r\n\t\t\t<tr key={data.id}>\r\n\t\t\t\t<td>{index + 1}</td>\r\n\t\t\t\t<td>\r\n                    {data.country}\r\n                </td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{data.cases}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{data.todayCases}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{data.deaths}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n                    {data.todayDeaths}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t{data.recovered}\r\n\t\t\t\t</td>\r\n                <td>\r\n\t\t\t\t\t{data.active}\r\n\t\t\t\t</td>\r\n                <td>\r\n\t\t\t\t\t{data.critical}\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n    )});\r\n  return (\r\n    <div className=\"table-container\">\t\t\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\t<h1>COVID-19 DETAIL TRACKER</h1>\r\n\t\t\t</div>\t\t\t\t\t\r\n\t\t\t<table className=\"table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n                      <th>No</th>\r\n                      <th>Country</th>\r\n                      <th>Cases</th>\r\n                      <th>Today Cases</th>\r\n                      <th>Deaths</th>\r\n                      <th>Today Deaths</th>\r\n                      <th>Recovered</th>\r\n                      <th>Active</th>\r\n                      <th>Critical</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>{data}</tbody>\r\n\t\t\t</table>\r\n\t\t</div>\r\n  )\r\n}\r\n\r\nexport default Tabel\r\n","import React, { useEffect,useState } from 'react';\nimport './App.css';\nimport Home from './Page/Home'\nimport Pagination from './components/Pagination/Pagination'\nimport Table from './components/Tabel/Tabel'\nimport Clock from 'react-live-clock';\n\n\nfunction App() {\n\n  const [posts, setPosts] = useState([]);\n  const [search,setSearch] = useState('')\n  const [update,setupdate]= useState(false)\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage,setPostPerpage] = useState(10);\n  const [height,setHeight]= useState(1305)\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  let currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  if (search!==''){\n     let A = [...posts]\n     currentPosts= A.filter((el)=>el.country === search )\n  }\n\n  useEffect(()=>{\n    fetch('https://coronavirus-19-api.herokuapp.com/countries')\n    .then(response=>response.json())\n    .then(json=>setPosts(json))\n    console.log(\"mounting\")\n    setTimeout(()=>{\n      setupdate(!update)\n    },20000)\n    return()=>{\n      fetch('https://coronavirus-19-api.herokuapp.com/countries')\n      .then(response=>response.json())\n      .then(json=>setPosts(json))\n      console.log(\"updating\")\n    }\n  },[update,postsPerPage])\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const handleFilter=(e)=>{\n      if (e.target.value === \"25\") {\n        setPostPerpage(25)\n        setHeight(2070)\n    } else if (e.target.value === \"50\") {\n        setPostPerpage(50)\n        setHeight(3345)\n    } else if (e.target.value === \"10\") {\n        setPostPerpage(10)\n        setHeight(1305)\n    }\n  }\n\n  const handleSearch=(e)=>{\n    setSearch(e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n      <Home posts={currentPosts}/>\n      <div>\n        <div style={{position:'absolute',left:150,top:650}}>\n          <select\n            className=\"select-filter\"\n            onChange={handleFilter}\n            >\n                <option value={\"10\"}>10</option>\n                <option value={\"25\"}>25</option>\n                <option value={\"50\"}>50</option>\n            </select>\n        </div>\n        <div style={{position:'absolute',right:150,top:650}}>\n          <input\n            placeholder = \"Search\"\n            className=\"Search\"\n            type=\"text\"\n            value={search}\n            onChange={handleSearch}\n          />\n\t\t\t  </div>\n\t\t  </div>\n      <Table detail={currentPosts}/>\n     {search === \"\" && <Pagination\n        postsPerPage={postsPerPage}\n        totalPosts={posts.length}\n        paginate={paginate}\n        height={height}\n      />}\n      <div style={{\n        position:'absolute',\n        paddingLeft:20,\n        paddingRight:20,\n        top:-20,\n        left:'35%',\n        borderRadius:20,\n        backgroundColor:'#FF0742',\n        color:'#ffffff',\n        height:200,\n        }}>\n        <h1 style={{borderColor:'black',borderWidth:4,paddingTop:80}}>\n          CORONA VIRUS LIVE UPDATE\n        </h1>\n        <h3 style={{textAlign:'center'}}><Clock format={'HH:mm:ss'} ticking={true} timezone={'Indonesia'} /></h3>\n      </div>\n      <p style={{textAlign:'center',color:'#FF0742'}}>Ⓒ 2020 FAKHRIL AK</p>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}